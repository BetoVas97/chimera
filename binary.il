// Code generated by the chimera compiler.

.assembly 'chimera' {}

.assembly extern 'chimeralib' {}

.assembly extern System.Core{
  .ver 4:0:0:0 
 .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )
}
.class public 'ChimeraProgram' extends ['mscorlib']'System'.'Object' {
		.field private static int32 num
		.field private static string option

.method private static hidebysig specialname rtspecialname 
           default void '.cctor' ()  cil managed {
		ldc.i4.0
		stsfld int32 ChimeraProgram::num
		ldstr ""
		stsfld string ChimeraProgram::option
		ret
	}
	.method public static hidebysig	default string Binary(int32 num) cil managed {
		.locals init(int32 'remainder')
		ldc.i4.0
		stloc 'remainder'
		.locals init(string 'result')
		ldstr ""
		stloc 'result'
		ldarg 0
		ldc.i4.0
		clt
		ldarg 0
		ldc.i4.0
		ceq
		or
		brfalse '$000012'
		ldstr "0"
		ret

		br $000013
	'$000013':

	'$000012':
		ldstr ""
		stloc 'result'
	'$000014':
		ldarg 0
		ldc.i4.2
		rem
		stloc 'remainder'
		ldloc 'remainder'
		call string class ['chimeralib']'Chimera'.'Utils'::'IntToStr'(int32)

		ldloc 'result'
		call string class ['chimeralib']'Chimera'.'Utils'::'CatStr'(string,string)
		stloc 'result'
		ldarg 0
		ldc.i4.2
		div
		starg 0
		ldarg 0
		ldc.i4.0
		ceq
		brfalse '$000016'
		br '$000015'

		br $000017
	'$000017':

	'$000016':
		br '$000014'
	'$000015':
		ldloc 'result'
		ret
		ret
	}

	.method public static void 'start'() {
		.entrypoint
	'$000018':
		ldstr "Input a number: "
		call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
		call int32 class ['chimeralib']'Chimera'.'Utils'::'RdInt'()
		stsfld int32 ChimeraProgram::num
		ldstr "Conversion to binary of that number: "
		call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
		ldsfld int32 ChimeraProgram::num
		call string class ChimeraProgram::Binary(int32)
		call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
		call void class ['chimeralib']'Chimera'.'Utils'::'WrLn'()
		ldstr "Convert another number? "
		call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
		call string class ['chimeralib']'Chimera'.'Utils'::'RdStr'()
		stsfld string ChimeraProgram::option
		ldsfld string ChimeraProgram::option
		call int32 class ['chimeralib']'Chimera'.'Utils'::'LenStr'(string)
		ldc.i4.0
		ceq
		brfalse '$000020'
		ldstr "N"
		stsfld string ChimeraProgram::option

		br $000021		ldsfld string ChimeraProgram::option

		ldc.i4.0
		call string class ['chimeralib']'Chimera'.'Utils'::'AtStr'(string,int32)
		stsfld string ChimeraProgram::option

	'$000021':

	'$000020':
		ldsfld string ChimeraProgram::option

		ldstr "Y"
		call int32 class ['chimeralib']'Chimera'.'Utils'::'CmpStr'(string,string)
		ldc.i4.0
		ceq
		ldc.i4.1
		xor
		ldsfld string ChimeraProgram::option

		ldstr "y"
		call int32 class ['chimeralib']'Chimera'.'Utils'::'CmpStr'(string,string)
		ldc.i4.0
		ceq
		ldc.i4.1
		xor
		and
		brfalse '$000022'
		br '$000019'

		br $000023
	'$000023':

	'$000022':
		br '$000018'
	'$000019':
		ret
	}
}
